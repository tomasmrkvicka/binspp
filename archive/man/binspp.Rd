% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binspp-package.R, R/binspp_auxiliary.R
\docType{package}
\name{binspp}
\alias{binspp}
\title{binspp Bayesian inference for Neyman-Scott point processes}
\usage{
binspp(
  X,
  control,
  x_left,
  x_right,
  y_bottom,
  y_top,
  W_dil,
  z_beta = NULL,
  z_alpha = NULL,
  z_omega = NULL
)
}
\arguments{
\item{control}{list specifying various tuning constants for the MCMC estimation, @seealso Details.}

\item{x_left}{vector describing the observation window, contains the lower x-coordinate of the corners of each rectangle.}

\item{x_right}{vector describing the observation window, contains the higher x-coordinate of the corners of each rectangle.}

\item{y_bottom}{vector describing the observation window, contains the smaller y-coordinate of the corners of each rectangle.}

\item{y_top}{vector describing the observation window, contains the higher y-coordinate of the corners of each rectangle.}

\item{W_dil}{the observation window dilated by the assumed maximal cluster radius.}

\item{z_beta}{list of covariates describing the intensity function of the parent process, each covariate being a pixel image as used in the “spatstat” package.}

\item{z_alpha}{list of covariates describing the location-dependent mean number of points in a cluster, each covariate being a pixel image as used in the “spatstat” package.}

\item{z_omega}{list of covariates describing the location-dependent scale of a cluster, each covariate being a pixel image as used in the “spatstat” package.}

\item{x}{observed point pattern in the “ppp” format of the “spatstat” package.}
}
\value{
The output of the function is given by the list containing the parameter estimates along with the 2.5% and 97.5% quantiles of the posterior distributions. Also, several auxiliary objects are included in the list which are needed for the “print.outputs” and “plot.outputs” functions.
}
\description{
This package introduces the Bayesian MCMC algorithm for generalized Thomas process,
   allowing cluster size to have a variance that is greater or less than the expected value
   (cluster sizes are over- or under-dispersed).

This function performs the Bayesian MCMC estimation of parameters for Thomas-type cluster point process with inhomogeneity in any of the following parts: (i) distribution of parent points, (ii) mean number of points in a cluster, (iii) cluster spread. The process is observed in the observation window W which is a union of aligned rectangles, aligned with the coordinate axes. The inhomogeneities are described through a parametric model depending on covariates.
    The estimation algorithm is described in …
}
\details{
Simulation of generalized Thomas process, Bayesian MCMC estimation of parameters for generalized Thomas process.
}
\note{
LinkingTo: Rcpp, RcppArmadillo, RcppEigen

    License: GPL-3

    Encoding: UTF-8
}
\examples{

# Prepare the dataset:
X = trees_N4
x_left = x_left_N4
x_right = x_right_N4
y_bottom = y_bottom_N4
y_top = y_top_N4

z_beta = list(refor=cov.refor, slope=cov.slope)
z_alpha = list(tmi=cov.tmi, tdensity=cov.tdensity)
z_omega = list(slope=cov.slope, reserv=cov.reserv)

# Determine the union of rectangles:
W = owin(c(x_left[1],x_right[1]),c(y_bottom[1],y_top[1]))
if(length(x_left)>=2){
  for(i in 2:length(x_left)){
    W2 = owin(c(x_left[i],x_right[i]),c(y_bottom[i],y_top[i]))
    W=union.owin(W,W2)
  }
}

# Dilated observation window:
W_dil = dilation.owin(W,100)


# User-specified hyperparameters for prior distributions:
# control = list(NStep=500, BurnIn=100, SamplingFreq=10, Prior_alpha_mean=3, Prior_alpha_SD=2,
#                Prior_omega_mean=5.5, Prior_omega_SD=5, Prior_alphavec_SD=c(4.25,0.012),
#                Prior_omegavec_SD=c(0.18,0.009))

# Default parameters for prior distributions:
control = list(NStep=500, BurnIn=100, SamplingFreq=10)


# MCMC estimation:
Output = binspp(X, control, x_left, x_right, y_bottom, y_top, W_dil, z_beta, z_alpha, z_omega)


# Which hyperparameter values for prior distribution were used?
Output$priorParameters


# Text output + series of figures:
print.outputs(Output)
plot.outputs(Output)


# Recompute the outputs when another value of burn-in is desired,
# without running the chain again:
Out2 <- re_estimate(Output, BurnIn=200)
print.outputs(Out2)
plot.outputs(Out2)

}
\author{
Tomas Mrkvicka <mrkvicka.toma@gmail.com> (author), Ladislav Beranek <beranek@jcu.cz> (maintainer), Radim Remes <inrem@jcu.cz> (maintainer)
}
